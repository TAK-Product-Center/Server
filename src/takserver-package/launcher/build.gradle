buildscript {
    dependencies {
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:' + gradle_ospackage_version
    }
}

apply plugin: 'nebula.ospackage'
apply from: "../utils/utils.gradle"

// Copy scripts
task copyLauncherScripts(type: Copy) {
    from project(':takserver-core').file('scripts')
    into "$buildDir/takArtifacts"
    exclude 'utils*', 'messaging*', 'API*', 'plugins*', 'retention*', 'takserver.sh'
}

// rpm postinstall script
def postinstall_script_launcher = '''\

chmod 644 /opt/tak/logging-restrictsize.xml
chmod 544 /opt/tak/*.bat
chmod 544 /opt/tak/*.sh

chmod 544 /opt/tak/messaging/*.sh
chmod u+w /opt/tak/messaging/takserver-messaging.sh
cp /opt/tak/messaging/takserver-messaging.sh /opt/tak
chown -f tak:tak /opt/tak/takserver-messaging.sh 2>/dev/null

chmod 544 /opt/tak/API/*.sh
chmod u+w /opt/tak/API/takserver-api.sh
cp /opt/tak/API/takserver-api.sh /opt/tak
chown -f tak:tak /opt/tak/takserver-api.sh 2>/dev/null

chmod 544 /opt/tak/takserver-plugins.sh
chmod u+w /opt/tak/takserver-plugins.sh
chown -f tak:tak /opt/tak/takserver-plugins.sh 2>/dev/null

chmod 544 /opt/tak/retention/*.sh
chmod u+w /opt/tak/retention/takserver-retention.sh
cp /opt/tak/retention/takserver-retention.sh /opt/tak
chown -f tak:tak /opt/tak/takserver-retention.sh 2>/dev/null

chmod 500 /opt/tak/certs/*.sh
chmod 600 /opt/tak/certs/cert-metadata.sh

chown root:root /opt/tak/messaging/takserver-messaging
chmod 755 /opt/tak/messaging/takserver-messaging
cp /opt/tak/messaging/takserver-messaging /etc/init.d
rm -rf /opt/tak/messaging

chown root:root /opt/tak/API/takserver-api
chmod 755 /opt/tak/API/takserver-api
cp /opt/tak/API/takserver-api /etc/init.d
rm -rf /opt/tak/API

chown root:root /opt/tak/launcher/takserver
chown root:root /opt/tak/launcher/takserver-noplugins
chown root:root /opt/tak/takserver-plugins

chown root:root  /opt/tak/retention/takserver-retention
chmod 755 /opt/tak/retention/takserver-retention
cp /opt/tak/retention/takserver-retention /etc/init.d

mkdir -p /opt/tak/conf/retention

if [ ! -e /opt/tak/conf/retention/retention-policy.yml ]; then
    cp /opt/tak/retention/retention-policy.yml /opt/tak/conf/retention/
fi

if [ ! -e /opt/tak/conf/retention/retention-service.yml ]; then
    cp /opt/tak/retention/retention-service.yml /opt/tak/conf/retention/
fi

if [ -f /opt/tak/conf/retention/misison-archiving-config.yml ]; then
    rm -rf /opt/tak/conf/retention/misison-archiving-config.yml 
fi

if [ ! -e /opt/tak/conf/retention/mission-archiving-config.yml ]; then
    cp /opt/tak/retention/mission-archiving-config.yml /opt/tak/conf/retention/
fi

if [ ! -d "/opt/tak/mission-archive" ]; then
    mkdir -p /opt/tak/mission-archive
    cp /opt/tak/retention/mission-store.yml /opt/tak/mission-archive/
fi


chown -fR tak:tak /opt/tak/conf
chown -fR tak:tak /opt/tak/mission-archive
rm -rf /opt/tak/retention

chmod 755 /opt/tak/launcher/takserver
chmod 755 /opt/tak/launcher/takserver-noplugins
chmod 755 /opt/tak/takserver-plugins

cp /opt/tak/launcher/takserver /etc/init.d
cp /opt/tak/launcher/takserver-noplugins /etc/init.d
cp /opt/tak/takserver-plugins /etc/init.d
rm -rf /opt/tak/launcher
rm -rf /opt/tak/takserver-plugins


chmod 755 /opt/tak/utils
mkdir -p /opt/tak/logs
chown tak:tak /opt/tak/logs
chmod 755 /opt/tak/logs
chown -f tak:tak /opt/tak/CoreConfig.xml 2>/dev/null
mkdir -p /opt/tak/iconsets
chown -fR tak:tak /opt/tak/iconsets
mkdir -p /opt/tak/webcontent/webtak-plugins/plugins
if [ ! -f /opt/tak/webcontent/webtak-plugins/webtak-manifest.json ]; then 
\techo -e "{\\n\\t\\"plugins\\": [], \\n\\t\\"iconSets\\": []\\n}" > /opt/tak/webcontent/webtak-plugins/webtak-manifest.json
fi
chown -fR tak:tak /opt/tak/webcontent
mkdir -p /opt/tak/logs
chown tak:tak /opt/tak/logs
mkdir -p /opt/tak/lib
chown tak:tak /opt/tak/lib

cp /opt/tak/certs-tmp/cert-metadata.sh /opt/tak/certs/. 2>/dev/null || :
cp /opt/tak/certs-tmp/config.cfg /opt/tak/certs/. 2>/dev/null || :
rm -rf /opt/tak/certs-tmp

# rename old tomcat if it exists
mv /opt/tak/apache-tomcat /opt/tak/apache-tomcat_NO_LONGER_USED &>/dev/null



cat <<- "EOF"

TAK SERVER SOFTWARE LICENSE AGREEMENT

Distribution Statement A: Approved for public release; distribution is unlimited.

----

IMPORTANT: If you are going to use a database, make sure you copy the generated database password from /opt/tak/CoreConfig.example.xml on the database machine to your CoreConfig on this machine.

Create login credentials for local adminstrative access to the configuration interface:

sudo java -jar /opt/tak/utils/UserManager.jar usermod -A -p <password> <username>

For secure operation, TAK Server requires a keystore and truststore (X.509 certificates). Follow the instructions in Appendix B of the configuration guide to create these certificates.

Using Firefox or Chrome on this computer, browse to this address to verify keystore and truststore configuration:

http://localhost:8080
 
Login with the administrative credentials specified above.

Follow the instructions in the Installation section of the configuration guide to complete the setup process. 

EOF
'''

def posttrans_script = '''\
echo "setting user tak"
id -u tak &> /dev/null
if [ $? -ne 0 ] ; then
# User id 1491 is arbitrary
useradd tak -r -u 1491 --no-create-home -d /opt/tak
fi
'''

ospackage {
    packageName = 'takserver-core'
    version = takversion
    release = takreleaserpm
    os = LINUX
    arch = _arch
    user = _user
    permissionGroup = _permission_group
    packageGroup = _package_group
    packageDescription = _package_description
    license = _license
    url = _url
    summary = _summary

    preInstall _preinstall_script
    postInstall postinstall_script_launcher
    postUninstall _postuninstall_script
    postTrans posttrans_script

    from ("$buildDir/takArtifacts") {
        into 'opt/tak'
        fileMode = 444
        dirMode = 755
    }
}

task prePackage { }
prePackage.dependsOn ':takserver-core:bootWar'
prePackage.dependsOn ':takserver-usermanager:shadowJar'
prePackage.dependsOn ':takserver-takcl-core:publicJar'
prePackage.dependsOn copyJarsNoDb
prePackage.dependsOn copyWars
prePackage.dependsOn copyPluginsJar
prePackage.dependsOn copyRetentionJar
prePackage.dependsOn copyCoreConfigXSD
prePackage.dependsOn copyCoreConfigExample
prePackage.dependsOn copyMessagingScripts
prePackage.dependsOn copyAPIScripts
prePackage.dependsOn copyPluginsScripts
prePackage.dependsOn copyRetentionConfigs
prePackage.dependsOn copyRetentionScripts
prePackage.dependsOn copyLauncherScripts
prePackage.dependsOn copyDocs
prePackage.dependsOn copyPolicy
prePackage.dependsOn copyLicense

buildRpm.dependsOn prePackage

buildDeb.dependsOn prePackage

buildRpm {
    requires('java-11-openjdk-devel')
    obsoletes('takserver-launcher')
    obsoletes('takserver-messaging')
    obsoletes('takserver-api')
}

// TODO: add deb package dependencies here
buildDeb { }


